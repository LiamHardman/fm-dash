# Frontend Dockerfile for Vue.js application
FROM node:24-alpine AS vue-builder
LABEL stage=vue-builder
WORKDIR /app-vue

# Copy package files first for better layer caching
COPY package.json ./
# Regenerate package-lock.json in Linux environment to fix Rollup optional dependencies
RUN npm install --legacy-peer-deps --package-lock-only && npm ci --legacy-peer-deps

# Copy all source files
COPY . .

# Build the application
RUN npm run build

FROM nginx:alpine
LABEL stage=final-frontend

# Copy custom nginx configuration
COPY nginx-frontend.conf /etc/nginx/nginx.conf

# Copy configuration injection script
COPY config-injector.sh /usr/local/bin/config-injector.sh
RUN chmod +x /usr/local/bin/config-injector.sh

# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html/*

# Copy built Vue app from builder stage
COPY --from=vue-builder /app-vue/dist /usr/share/nginx/html/

# Create nginx user and set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/log/nginx /etc/nginx/conf.d
RUN touch /var/run/nginx.pid && chown -R nginx:nginx /var/run/nginx.pid

# Run as non-root user
USER nginx

EXPOSE 8080

# Use the configuration injection script as the entrypoint
CMD ["/usr/local/bin/config-injector.sh"] 