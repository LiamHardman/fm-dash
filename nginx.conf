# nginx.conf
# Location: Root of your project

user www-data; # User Nginx runs as
worker_processes auto; # Auto-detect number of CPU cores
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # Set a higher limit for client request body size (e.g., for file uploads)
    client_max_body_size 100m; # Accommodates up to 55MB uploads (with buffer for 50MB max)

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 8080 default_server; # Nginx listens on this port (matches EXPOSE and PORT_NGINX in Dockerfile)
        listen [::]:8080 default_server;

        server_name _; # Catch all server names

        root /var/www/html; # Root directory for Vue.js static files
        index index.html index.htm;

        location / {
            # Try to serve file directly, then directory, then fall back to index.html for SPA routing
            try_files $uri $uri/ /index.html;
        }

        # Reverse proxy API requests to the Go backend
        location /api/ {
            # Corrected: Removed trailing slash from proxy_pass URL
            # This ensures that a request to /api/foo is proxied to http://localhost:8091/api/foo
            proxy_pass http://localhost:8091;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host; # Pass the original host header
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy /upload requests to the Go backend
        # This location block is likely correct as is, assuming Go handles /upload directly.
        location /upload {
            proxy_pass http://localhost:8091/upload;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Add specific caching policies for static assets
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public";
        }

        # Deny access to .htaccess files, if Apache's files are present
        location ~ /\.ht {
            deny all;
        }
    }
}
