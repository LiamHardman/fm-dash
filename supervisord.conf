; supervisord.conf
# Location: Root of your project

[supervisord]
nodaemon=true                     ; Run supervisord in the foreground
logfile=/var/log/supervisor/supervisord.log ; Main log file
pidfile=/var/run/supervisord.pid  ; PID file
loglevel=info                     ; Set log level (debug, info, warn, error, critical)

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;" ; Command to start Nginx in the foreground
autostart=true                           ; Start Nginx automatically when supervisord starts
autorestart=true                         ; Restart Nginx if it crashes
priority=10                              ; Lower number means higher priority
stdout_logfile=/var/log/supervisor/nginx_stdout.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
stderr_logfile=/var/log/supervisor/nginx_stderr.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=3
user=root                                ; Nginx often needs to start as root to bind to privileged ports (though we use 8080) and manage workers

[program:go-api]
command=/app/v2fmdash-server             ; Command to start your Go API server (updated binary name)
directory=/app                           ; Working directory for the Go app
autostart=true                           ; Start Go app automatically
autorestart=true                         ; Restart Go app if it crashes
priority=20                              ; Higher number means lower priority (start after Nginx, or concurrently)
environment=PORT="%(ENV_PORT_GO_API)s"   ; Pass PORT_GO_API from Dockerfile ENV to Go app
stdout_logfile=/var/log/supervisor/go_api_stdout.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
stderr_logfile=/var/log/supervisor/go_api_stderr.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=3
user=root                                ; Or a non-root user if your Go app is prepared for it and permissions are set
                                         ; If running Go app as non-root, ensure /app and /app/public have correct ownership/permissions
