// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/player.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Player holds essential information for frontend display and sorting
type Player struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Uid                 int64                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Position            string                 `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Age                 string                 `protobuf:"bytes,4,opt,name=age,proto3" json:"age,omitempty"`
	Club                string                 `protobuf:"bytes,5,opt,name=club,proto3" json:"club,omitempty"`
	Division            string                 `protobuf:"bytes,6,opt,name=division,proto3" json:"division,omitempty"`
	TransferValue       string                 `protobuf:"bytes,7,opt,name=transfer_value,json=transferValue,proto3" json:"transfer_value,omitempty"`
	Wage                string                 `protobuf:"bytes,8,opt,name=wage,proto3" json:"wage,omitempty"`
	Personality         string                 `protobuf:"bytes,9,opt,name=personality,proto3" json:"personality,omitempty"`
	MediaHandling       string                 `protobuf:"bytes,10,opt,name=media_handling,json=mediaHandling,proto3" json:"media_handling,omitempty"`
	Nationality         string                 `protobuf:"bytes,11,opt,name=nationality,proto3" json:"nationality,omitempty"`
	NationalityIso      string                 `protobuf:"bytes,12,opt,name=nationality_iso,json=nationalityIso,proto3" json:"nationality_iso,omitempty"`
	NationalityFifaCode string                 `protobuf:"bytes,13,opt,name=nationality_fifa_code,json=nationalityFifaCode,proto3" json:"nationality_fifa_code,omitempty"`
	AttributeMasked     bool                   `protobuf:"varint,14,opt,name=attribute_masked,json=attributeMasked,proto3" json:"attribute_masked,omitempty"`
	// Essential FIFA-style stats for display and sorting
	Pac     int32 `protobuf:"varint,15,opt,name=pac,proto3" json:"pac,omitempty"`
	Sho     int32 `protobuf:"varint,16,opt,name=sho,proto3" json:"sho,omitempty"`
	Pas     int32 `protobuf:"varint,17,opt,name=pas,proto3" json:"pas,omitempty"`
	Dri     int32 `protobuf:"varint,18,opt,name=dri,proto3" json:"dri,omitempty"`
	Def     int32 `protobuf:"varint,19,opt,name=def,proto3" json:"def,omitempty"`
	Phy     int32 `protobuf:"varint,20,opt,name=phy,proto3" json:"phy,omitempty"`
	Gk      int32 `protobuf:"varint,21,opt,name=gk,proto3" json:"gk,omitempty"`
	Div     int32 `protobuf:"varint,22,opt,name=div,proto3" json:"div,omitempty"`
	Han     int32 `protobuf:"varint,23,opt,name=han,proto3" json:"han,omitempty"`
	Ref     int32 `protobuf:"varint,24,opt,name=ref,proto3" json:"ref,omitempty"`
	Kic     int32 `protobuf:"varint,25,opt,name=kic,proto3" json:"kic,omitempty"`
	Spd     int32 `protobuf:"varint,26,opt,name=spd,proto3" json:"spd,omitempty"`
	Pos     int32 `protobuf:"varint,27,opt,name=pos,proto3" json:"pos,omitempty"`
	Overall int32 `protobuf:"varint,28,opt,name=overall,proto3" json:"overall,omitempty"`
	// Position data for filtering and grouping
	ParsedPositions []string `protobuf:"bytes,29,rep,name=parsed_positions,json=parsedPositions,proto3" json:"parsed_positions,omitempty"`
	ShortPositions  []string `protobuf:"bytes,30,rep,name=short_positions,json=shortPositions,proto3" json:"short_positions,omitempty"`
	PositionGroups  []string `protobuf:"bytes,31,rep,name=position_groups,json=positionGroups,proto3" json:"position_groups,omitempty"`
	// Essential attributes for display (only the most important ones)
	EssentialAttributes map[string]string `protobuf:"bytes,32,rep,name=essential_attributes,json=essentialAttributes,proto3" json:"essential_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Best role for display
	BestRoleOverall string `protobuf:"bytes,33,opt,name=best_role_overall,json=bestRoleOverall,proto3" json:"best_role_overall,omitempty"`
	// Numeric values for sorting
	TransferValueAmount int64 `protobuf:"varint,34,opt,name=transfer_value_amount,json=transferValueAmount,proto3" json:"transfer_value_amount,omitempty"`
	WageAmount          int64 `protobuf:"varint,35,opt,name=wage_amount,json=wageAmount,proto3" json:"wage_amount,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_proto_player_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Player) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *Player) GetClub() string {
	if x != nil {
		return x.Club
	}
	return ""
}

func (x *Player) GetDivision() string {
	if x != nil {
		return x.Division
	}
	return ""
}

func (x *Player) GetTransferValue() string {
	if x != nil {
		return x.TransferValue
	}
	return ""
}

func (x *Player) GetWage() string {
	if x != nil {
		return x.Wage
	}
	return ""
}

func (x *Player) GetPersonality() string {
	if x != nil {
		return x.Personality
	}
	return ""
}

func (x *Player) GetMediaHandling() string {
	if x != nil {
		return x.MediaHandling
	}
	return ""
}

func (x *Player) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *Player) GetNationalityIso() string {
	if x != nil {
		return x.NationalityIso
	}
	return ""
}

func (x *Player) GetNationalityFifaCode() string {
	if x != nil {
		return x.NationalityFifaCode
	}
	return ""
}

func (x *Player) GetAttributeMasked() bool {
	if x != nil {
		return x.AttributeMasked
	}
	return false
}

func (x *Player) GetPac() int32 {
	if x != nil {
		return x.Pac
	}
	return 0
}

func (x *Player) GetSho() int32 {
	if x != nil {
		return x.Sho
	}
	return 0
}

func (x *Player) GetPas() int32 {
	if x != nil {
		return x.Pas
	}
	return 0
}

func (x *Player) GetDri() int32 {
	if x != nil {
		return x.Dri
	}
	return 0
}

func (x *Player) GetDef() int32 {
	if x != nil {
		return x.Def
	}
	return 0
}

func (x *Player) GetPhy() int32 {
	if x != nil {
		return x.Phy
	}
	return 0
}

func (x *Player) GetGk() int32 {
	if x != nil {
		return x.Gk
	}
	return 0
}

func (x *Player) GetDiv() int32 {
	if x != nil {
		return x.Div
	}
	return 0
}

func (x *Player) GetHan() int32 {
	if x != nil {
		return x.Han
	}
	return 0
}

func (x *Player) GetRef() int32 {
	if x != nil {
		return x.Ref
	}
	return 0
}

func (x *Player) GetKic() int32 {
	if x != nil {
		return x.Kic
	}
	return 0
}

func (x *Player) GetSpd() int32 {
	if x != nil {
		return x.Spd
	}
	return 0
}

func (x *Player) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *Player) GetOverall() int32 {
	if x != nil {
		return x.Overall
	}
	return 0
}

func (x *Player) GetParsedPositions() []string {
	if x != nil {
		return x.ParsedPositions
	}
	return nil
}

func (x *Player) GetShortPositions() []string {
	if x != nil {
		return x.ShortPositions
	}
	return nil
}

func (x *Player) GetPositionGroups() []string {
	if x != nil {
		return x.PositionGroups
	}
	return nil
}

func (x *Player) GetEssentialAttributes() map[string]string {
	if x != nil {
		return x.EssentialAttributes
	}
	return nil
}

func (x *Player) GetBestRoleOverall() string {
	if x != nil {
		return x.BestRoleOverall
	}
	return ""
}

func (x *Player) GetTransferValueAmount() int64 {
	if x != nil {
		return x.TransferValueAmount
	}
	return 0
}

func (x *Player) GetWageAmount() int64 {
	if x != nil {
		return x.WageAmount
	}
	return 0
}

// DatasetData represents a dataset containing player information
type DatasetData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Players        []*Player              `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	CurrencySymbol string                 `protobuf:"bytes,2,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
	CacheData      string                 `protobuf:"bytes,3,opt,name=cache_data,json=cacheData,proto3" json:"cache_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DatasetData) Reset() {
	*x = DatasetData{}
	mi := &file_proto_player_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetData) ProtoMessage() {}

func (x *DatasetData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetData.ProtoReflect.Descriptor instead.
func (*DatasetData) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{1}
}

func (x *DatasetData) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *DatasetData) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

func (x *DatasetData) GetCacheData() string {
	if x != nil {
		return x.CacheData
	}
	return ""
}

var File_proto_player_proto protoreflect.FileDescriptor

const file_proto_player_proto_rawDesc = "" +
	"\n" +
	"\x12proto/player.proto\x12\x06player\"\xde\b\n" +
	"\x06Player\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\x03R\x03uid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bposition\x18\x03 \x01(\tR\bposition\x12\x10\n" +
	"\x03age\x18\x04 \x01(\tR\x03age\x12\x12\n" +
	"\x04club\x18\x05 \x01(\tR\x04club\x12\x1a\n" +
	"\bdivision\x18\x06 \x01(\tR\bdivision\x12%\n" +
	"\x0etransfer_value\x18\a \x01(\tR\rtransferValue\x12\x12\n" +
	"\x04wage\x18\b \x01(\tR\x04wage\x12 \n" +
	"\vpersonality\x18\t \x01(\tR\vpersonality\x12%\n" +
	"\x0emedia_handling\x18\n" +
	" \x01(\tR\rmediaHandling\x12 \n" +
	"\vnationality\x18\v \x01(\tR\vnationality\x12'\n" +
	"\x0fnationality_iso\x18\f \x01(\tR\x0enationalityIso\x122\n" +
	"\x15nationality_fifa_code\x18\r \x01(\tR\x13nationalityFifaCode\x12)\n" +
	"\x10attribute_masked\x18\x0e \x01(\bR\x0fattributeMasked\x12\x10\n" +
	"\x03pac\x18\x0f \x01(\x05R\x03pac\x12\x10\n" +
	"\x03sho\x18\x10 \x01(\x05R\x03sho\x12\x10\n" +
	"\x03pas\x18\x11 \x01(\x05R\x03pas\x12\x10\n" +
	"\x03dri\x18\x12 \x01(\x05R\x03dri\x12\x10\n" +
	"\x03def\x18\x13 \x01(\x05R\x03def\x12\x10\n" +
	"\x03phy\x18\x14 \x01(\x05R\x03phy\x12\x0e\n" +
	"\x02gk\x18\x15 \x01(\x05R\x02gk\x12\x10\n" +
	"\x03div\x18\x16 \x01(\x05R\x03div\x12\x10\n" +
	"\x03han\x18\x17 \x01(\x05R\x03han\x12\x10\n" +
	"\x03ref\x18\x18 \x01(\x05R\x03ref\x12\x10\n" +
	"\x03kic\x18\x19 \x01(\x05R\x03kic\x12\x10\n" +
	"\x03spd\x18\x1a \x01(\x05R\x03spd\x12\x10\n" +
	"\x03pos\x18\x1b \x01(\x05R\x03pos\x12\x18\n" +
	"\aoverall\x18\x1c \x01(\x05R\aoverall\x12)\n" +
	"\x10parsed_positions\x18\x1d \x03(\tR\x0fparsedPositions\x12'\n" +
	"\x0fshort_positions\x18\x1e \x03(\tR\x0eshortPositions\x12'\n" +
	"\x0fposition_groups\x18\x1f \x03(\tR\x0epositionGroups\x12Z\n" +
	"\x14essential_attributes\x18  \x03(\v2'.player.Player.EssentialAttributesEntryR\x13essentialAttributes\x12*\n" +
	"\x11best_role_overall\x18! \x01(\tR\x0fbestRoleOverall\x122\n" +
	"\x15transfer_value_amount\x18\" \x01(\x03R\x13transferValueAmount\x12\x1f\n" +
	"\vwage_amount\x18# \x01(\x03R\n" +
	"wageAmount\x1aF\n" +
	"\x18EssentialAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\vDatasetData\x12(\n" +
	"\aplayers\x18\x01 \x03(\v2\x0e.player.PlayerR\aplayers\x12'\n" +
	"\x0fcurrency_symbol\x18\x02 \x01(\tR\x0ecurrencySymbol\x12\x1d\n" +
	"\n" +
	"cache_data\x18\x03 \x01(\tR\tcacheDataB\vZ\tapi/protob\x06proto3"

var (
	file_proto_player_proto_rawDescOnce sync.Once
	file_proto_player_proto_rawDescData []byte
)

func file_proto_player_proto_rawDescGZIP() []byte {
	file_proto_player_proto_rawDescOnce.Do(func() {
		file_proto_player_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_player_proto_rawDesc), len(file_proto_player_proto_rawDesc)))
	})
	return file_proto_player_proto_rawDescData
}

var file_proto_player_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_player_proto_goTypes = []any{
	(*Player)(nil),      // 0: player.Player
	(*DatasetData)(nil), // 1: player.DatasetData
	nil,                 // 2: player.Player.EssentialAttributesEntry
}
var file_proto_player_proto_depIdxs = []int32{
	2, // 0: player.Player.essential_attributes:type_name -> player.Player.EssentialAttributesEntry
	0, // 1: player.DatasetData.players:type_name -> player.Player
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_player_proto_init() }
func file_proto_player_proto_init() {
	if File_proto_player_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_player_proto_rawDesc), len(file_proto_player_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_player_proto_goTypes,
		DependencyIndexes: file_proto_player_proto_depIdxs,
		MessageInfos:      file_proto_player_proto_msgTypes,
	}.Build()
	File_proto_player_proto = out.File
	file_proto_player_proto_goTypes = nil
	file_proto_player_proto_depIdxs = nil
}
